五种数据类型：
	string
	hash
	list
	有序set
	无序set

Redis是一个支持持久化的内存数据库，也就是说redis需要经常将内存中的数据同步到磁盘来保证持久化。redis支持四种持久化方式，一是 Snapshotting（快照）也是默认方式；二是Append-only file（缩写aof）的方式；三是虚拟内存方式；四是diskstore方式。

快照（默认）
	save 900 1  #900秒内如果超过1个key被修改，则发起快照保存
	save 300 10 #300秒内容如超过10个key被修改，则发起快照保存
	save 60 10000
 	1. redis调用fork,现在有了子进程和父进程。
    2. 父进程继续处理client请求，子进程负责将内存内容写入到临时文件。由于os的写时复制机制（copy on write)父子进程会共享相同的物理页面，当父进程处理写请求时os会为父进程要修改的页面创建副本，而不是写共享的页面。所以子进程的地址空间内的数据是fork时刻整个数据库的一个快照。
    3. 当子进程将快照写入临时文件完毕后，用临时文件替换原来的快照文件，然后子进程退出（fork一个进程入内在也被复制了，即内存会是原来的两倍）。
    缺点：如果意外down掉，不能保证任何修改。
AOF：
   1.  redis调用fork ，现在有父子两个进程
   2. 子进程根据内存中的数据库快照，往临时文件中写入重建数据库状态的命令
   3. 父进程继续处理client请求，除了把写命令写入到原来的aof文件中。同时把收到的写命令缓存起来。这样就能保证如果子进程重写失败的话并不会出问题。
   4. 当子进程把快照内容写入已命令方式写到临时文件中后，子进程发信号通知父进程。然后父进程把缓存的写命令也写入到临时文件。
   5. 现在父进程可以使用临时文件替换老的aof文件，并重命名，后面收到的写命令也开始往新的aof文件中追加。
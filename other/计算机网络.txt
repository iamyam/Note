websocket：

	起源是因为http请求只能客户端发起
	最大的特点就是可以由客户端和服务端双向发起

	其他特点包括：
	（1）建立在 TCP 协议之上，服务器端的实现比较容易。
	（2）与 HTTP 协议有着良好的兼容性。默认端口也是80和443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器。
	（3）数据格式比较轻量，性能开销小，通信高效。
	（4）可以发送文本，也可以发送二进制数据。
	（5）没有同源限制，客户端可以与任意服务器通信。
	（6）协议标识符是ws（如果加密，则为wss），服务器网址就是 URL。

互联网协议：

	最底层的以太网协议（Ethernet）规定了电子信号如何组成数据包（packet），解决了子网内部的点对点通信。
	IP 协议定义了一套自己的地址规则，称为 IP 地址。它实现了路由功能，允许某个局域网的 A 主机，向另一个局域网的 B 主机发送消息。

	http://www.ruanyifeng.com/blog/2012/05/internet_protocol_suite_part_i.html（阮一峰）

	新加入的计算机不知道自己的IP地址、子网掩码、网关地址、DNS服务器等等参数。
	dhcp协议：
		以太网标头写自己的mac地址 对方的写FF-FF-FF-FF-FF-FF
		IP发送方写0.0.0.0 接收方写255.255.255.255
		双方端口号发出68 接受67

		dhcp服务器接收到之后就知道是给自己发送的包，其他人可以丢弃。然后分配，返回响应包。

输入地址敲击回车都发生了什么：

	查找本机host，如果没有向dns服务器，返回ip地址

	根据子网掩码判断是否在同一个子网络，如果不在需要通过网关转发

	tcp为本机设置一个端口 然后嵌入ip包写入发送/接收方ip地址 然后嵌入以太网写入双方mac地址 1500字节一个包

	Google接受到之后把数据包拼接，读出里面的http请求，然后找到nginx服务器 .php解析动态语言 调用fastcgi执行php脚本 然后返回结果集，在浏览器渲染。
	
悲观锁：
	假定会发生并发冲突，屏蔽一切可能违反数据完整性的操作。

乐观锁：
	假设不会发生并发冲突，只在提交操作时检查是否违反数据完整性。乐观锁不能解决脏读的问题。一般做法是在表中标示一个字段，如果更新操作时发现在字段不符合，则产生冲突。

并发量不高和不允许脏读的情况下，可以考虑悲观锁。否则效率急剧下降，可以考虑乐观锁

InnoDB

	共享锁：写操作才上锁
	排它锁：读写都锁
	意向共享锁：？？？
	意向排它锁：？？？

丢失更新：
	一个事务的更新覆盖了其它事务的更新结果，就是所谓的更新丢失。例如：用户A把值从6改为2，用户B把值从2改为6，则用户A丢失了他的更新。
脏读：
	当一个事务读取其它完成一半事务的记录时，就会发生脏读取。例如：用户A,B看到的值都是6，用户B把值改为2，用户A读到的值仍为6。
不可重复读：
	一个事务内读取一个数据，另一个事务更新该数据，再次读取就会出现数据不一致的情况。
幻读：
	是指当事务不是独立执行时发生的一种现象，例如第一个事务对一个表中的数据进行了修改，这种修改涉及到表中的全部数据行。同时，第二个事务也修改这个表中的数据，这种修改是向表中插入一行新数据。那么，以后就会发生操作第一个事务的用户发现表中还有没有修改的数据行，就好象发生了幻觉一样。

事务隔离界别：
	READ_UNCOMMITTED
	READ_COMMITTED
	REPEATABLE_READ（默认）
	SERIALIZABLE（顺序执行事务）